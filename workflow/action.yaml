name: 'Apptainer Runner'
description: | 
    Run commands inside a Apptainer container (rather than Docker).

    Apptainer (or singularity) must be installed in the runner image.

inputs:
  target:
    description: 'Target of the Snakemake workflow'
    required: true

  profile:
    description: 'Profile of snakemake'
    required: false
    default: |
        cores: 1

  config:
    description: 'Configuration to execute the workflow'
    required: false
    default: |
        key: value

  report:
    description: 'Name of the Snakemake report (if any)'
    required: false
    default: ''

  workdir:
    description: 'Directory from which to launch Snakemake'
    required: false
    default: '.'

  cachedir:
    description: 'Some medium-persistency directory used for apptainer caching'
    required: false
    default: '/cache'
  
  snakefile:
    description: 'Path to the Snakefile (absolute or relateive to workdir)'
    required: false
    default: 'Snakefile'


runs:
  using: 'composite'
  steps:
    - name: Set configuration paths
      shell: bash
      run: |
        # Set configuration paths
        echo "SNAKEMAKE_PROFILE=/tmp/snakemake-profiles/profile-gha-$RANDOM" >> $GITHUB_ENV
        echo "WORKFLOW_CONFIG=/tmp/workflow-configs/config-gha-$RANDOM/config.yaml" >> $GITHUB_ENV

    - name: Report snakemake version
      shell: bash
      run: |
        echo "Running Snakemake version $(snakemake --version)" >> $GITHUB_STEP_SUMMARY

    - name: Create profile
      shell: bash
      run: |
        mkdir -p $SNAKEMAKE_PROFILE
        cat <<EOF > $SNAKEMAKE_PROFILE/config.yaml
        ${{ inputs.profile }}
        EOF

    - name: Create config
      shell: bash
      run: |
        mkdir -p $(dirname $WORKFLOW_CONFIG)
        cat <<EOF > $WORKFLOW_CONFIG
        ${{ inputs.config }}
        EOF
        
            
    - name: Execute workflow
      shell: bash
      run: |
        cd ${{ inputs.workdir }}

        unset SINGULARITY_BIND
        unset APPTAINER_BIND 
        unset SINGULARITY_NO_EVAL 
        unset APPTAINER_NO_EVAL 
        export SINGULARITY_CACHEDIR=${{ inputs.cachedir }}
        export APPTAINER_CACHEDIR=${{ inputs.cachedir }}

        snakemake \
            --configfile $WORKFLOW_CONFIG \
            --snakefile ${{ inputs.snakefile }} \
            ${{ inputs.target }} 
      
    - name: Generate report
      shell: bash
      if: ${{ inputs.report != '' }}
      run: |
        cd ${{ inputs.workdir }}

        unset SINGULARITY_BIND
        unset APPTAINER_BIND 
        unset SINGULARITY_NO_EVAL 
        unset APPTAINER_NO_EVAL 
        export SINGULARITY_CACHEDIR=${{ inputs.cachedir }}
        export APPTAINER_CACHEDIR=${{ inputs.cachedir }}

        snakemake --report /tmp/${{ inputs.report }}.zip \
            --configfile $WORKFLOW_CONFIG \
            --snakefile ${{ inputs.snakefile }} \
            ${{ inputs.target }} 
        
    - name: Upload report
      if: ${{ inputs.report != '' }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.report }}
        path: /tmp/${{ inputs.report }}.zip
        
    
